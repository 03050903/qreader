{
  "name": "Qreader",
  "tagline": "A library that uses google's mobile vision api and simplify the QR code reading process",
  "body": "#QREader    [![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.nisrulz/qreader/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.github.nisrulz/qreader) [![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-QREader-green.svg?style=true)](https://android-arsenal.com/details/1/3478)\r\n\r\nA library that uses google's mobile vision api and simplify the QR code reading process \r\n\r\n#Integration\r\n- QREader is available in the MavenCentral, so getting it as simple as adding it as a dependency\r\n```gradle\r\ncompile 'com.github.nisrulz:qreader:1.0.1'\r\n```\r\n\r\n#Usage\r\n+ First add a `SurfaceView` to your layout and give it an id\r\n```java\r\n<SurfaceView\r\n        android:id=\"@+id/camera_view\"\r\n        android:layout_width=\"320dp\"\r\n        android:layout_height=\"320dp\"/>\r\n```\r\n\r\n+ Then in your Activity code reference the `SurfaceView`\r\n```java\r\nSurfaceView surfaceView = (SurfaceView) findViewById(R.id.camera_view);\r\n```\r\n\r\n+ Next setup the config\r\n    + The default config uses autofocus, back camera and preview size set at 800x800 and is referenced as below\r\n    ```java\r\n    QREader.getInstance().setUpConfig();\r\n    ```\r\n    \r\n    + There are other config methods to give you more granular configurations\r\n    ```java\r\n    // Disable/Enable autofocus\r\n    // Choose between Front facing or Back facing camera | Possible arguments : CameraSource.CAMERA_FACING_BACK /  CameraSource.CAMERA_FACING_FRONT\r\n    QREader.getInstance().setUpConfig(boolean autofocus_enabled, int facing);\r\n    // Change all the config values\r\n    QREader.getInstance().setUpConfig(boolean autofocus_enabled, int width, int height, int facing);\r\n    ```   \r\n\r\n\r\n+ Lastly call `QREader.getInstance().start()` with required arguments in your Activity code, to start reading \r\nQR code.\r\n```java\r\nQREader.getInstance().start(this, surfaceView, new QRDataListener() {\r\n        @Override\r\n        public void onDetected(final String data) {\r\n            Log.d(\"QREader\", \"Value : \" + data);\r\n        }\r\n    });\r\n```\r\n\r\n*where*\r\n\r\n|argument|type|\r\n|---|---|\r\n|this|`Context`|\r\n|surfaceView|`SurfaceView`|\r\n|new QRDataListener()|`QRDataListener`|\r\n\r\nLicense\r\n=======\r\n\r\n    Copyright 2016 Nishant Srivastava\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}